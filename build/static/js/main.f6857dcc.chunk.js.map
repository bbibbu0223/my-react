{"version":3,"sources":["contents/Music.js","contents/Image.js","contents/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Music","console","log","FMusic","className","map","w","k","href","link","src","img","title","text","Image","useState","num","setNum","alt","onClick","Main","autoplay","loop","muted","controls","type","App","basename","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g8BAEe,SAASA,IAGhB,OAFJC,QAAQC,IAAIC,GAIJ,qBAAKC,UAAU,UAAf,SAIKD,EAAOE,KAAI,SAACC,EAAEC,GAAH,OACZ,mBAAGH,UAAU,aAAaI,KAAMF,EAAEG,KAAlC,SACA,sBAAKL,UAAU,QAAf,UACI,kCACA,qBAAKM,IAAKJ,EAAEK,QAEZ,sBAAKP,UAAU,SAAf,UACI,mBAAGA,UAAU,cAAb,SAA4BE,EAAEM,QAC9B,mBAAGR,UAAU,aAAb,SAA2BE,EAAEO,oB,YCjBtC,SAASC,IACpB,IAEA,EAAmBC,mBAAS,GAA5B,mBAAKC,EAAL,KAASC,EAAT,KAUA,OACI,mCACA,sBAAKb,UAAU,UAAf,UAEI,qBAAKM,IAhBA,CAAC,cAAc,cAAc,cAAc,cACxD,cAAc,cAAc,cAAc,eAejBM,GAAME,IAAI,GAAGd,UAAU,UACxC,qBAAKA,UAAU,QAAf,SACA,mBAAGA,UAAU,MAAb,SAAmB,mBAAGe,QAd9B,WACIlB,QAAQC,IAAIc,GAERC,EADDD,EAAM,EACEA,EAAI,EAEJ,IASY,2B,wBCrBhB,SAASI,IAGpB,OAEI,sBAAKhB,UAAU,YAAf,UAEI,mBAAGA,UAAU,WAAb,sBACA,uBAAOiB,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,UAAQ,EAAnC,SACI,wBAAQd,IAAI,yBAAyBe,KAAK,mBCuC3CC,MAxCf,WACE,OACA,mCAEA,cAAC,IAAD,CAAeC,SAAS,YAAxB,SACE,sBAAKvB,UAAU,WAAf,UACE,2CAEE,8BACE,qBAAIA,UAAU,WAAd,UACI,cAAC,IAAD,CAAMwB,GAAG,IAAT,kBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAGF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAGF,4BAMJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAACV,EAAD,MACtB,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,SAAlB,SAA2B,cAAC9B,EAAD,MAC3B,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,SAAlB,SAA2B,cAAChB,EAAD,iBCzBtBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f6857dcc.chunk.js","sourcesContent":["import FMusic from \"../json/music.json\";\r\n\r\nexport default function Music(){\r\n    console.log(FMusic);\r\n    \r\n        return (\r\n            \r\n            <div className=\"f-music\">\r\n                \r\n            \r\n            \r\n                {FMusic.map((w,k)=>(\r\n                <a className=\"music-wrap\" href={w.link}>\r\n                <div className=\"music\">\r\n                    <picture>\r\n                    <img src={w.img}/>\r\n                    </picture>\r\n                    <div className=\"m-info\">\r\n                        <p className=\"music-title\">{w.title}</p>\r\n                        <p className=\"music-text\">{w.text}</p>\r\n                    </div>\r\n                </div>\r\n                </a>\r\n                ))\r\n            }\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n","import {useState} from 'react';\r\n\r\nexport default function Image(){\r\n    let imgArr = ['img/075.jpg','img/076.jpg','img/077.jpg','img/078.jpg',\r\n    'img/079.jpg','img/080.jpg','img/081.jpg','img/082.jpg'];\r\n    let [num,setNum] = useState(0);\r\n\r\n    function change(){\r\n        console.log(num)\r\n        if(num < 8){\r\n            setNum(num+1);\r\n        }else{\r\n            setNum(0);\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"con-img\">\r\n        \r\n            <img src={imgArr[num]} alt=\"\" className=\"img-1\"/>\r\n            <div className=\"M-btn\">\r\n            <p className=\"btn\"><a onClick={change}>Next</a></p>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}","export default function Main(){\r\n    \r\n\r\n    return(\r\n        \r\n        <div className='container'>\r\n            \r\n            <p className=\"main-txt\">Welcome!</p>\r\n            <video autoplay loop muted controls>\r\n                <source src=\"img/Record - 65390.mp4\" type=\"video/mp4\"></source>\r\n            </video>\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport Music from './contents/Music';\nimport Image from './contents/Image';\nimport Hobby from './contents/Hobby';\n\nimport {BrowserRouter, Route, Switch, Link} from \"react-router-dom\";\nimport Main from './contents/Main';\n\nfunction App() {\n  return (\n  <>\n  \n  <BrowserRouter basename=\"/my-react\">\n    <div className=\"contents\">\n      <h1>I love it</h1>\n      \n        <div>\n          <ul className=\"con-list\">\n              <Link to=\"/\">Main</Link>\n\n            <li>\n              <Link to=\"/Music\">Music</Link>\n              {/* <a href=\"#\">Music</a> */}\n            </li>\n            <li>\n              <Link to=\"/Image\">Image</Link>\n              {/* <a href=\"#\">Image</a> */}\n            </li>\n            <li>\n              {/* <Link to=\"/Hobby\">Hobby</Link> */}\n              {/* <a href=\"#\">Hobby</a> */}\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route exact path=\"/\"><Main /></Route>\n          <Route exact path=\"/Music\"><Music /></Route>\n          <Route exact path=\"/Image\"><Image /></Route>\n          {/* <Route  path=\"/Hobby\"><Hobby /></Route> */}\n        </Switch>\n    </div>\n    </BrowserRouter>\n    \n\n  </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}